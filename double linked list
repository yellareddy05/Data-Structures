#include <stdio.h>
#include <stdlib.h>

typedef struct listitem
{
    struct listitem *next; // pointer to next item
    struct listitem *prev; // pointer to data item
    int data;              // some data
}listitem_t;

int main()
{
    listitem_t *temp, head;
    head.next = (listitem_t*)&head;
    head.prev = (listitem_t*)&head;
    head.data = -1;
    
    //now populate the list
    for(int i=0;i<3;i++)
    {
        temp = malloc(sizeof(listitem_t));
        temp->data = i;
        temp->next = head.next;
        head.next = temp;
        temp->prev = &head;
        temp->next->prev=temp;
        
    }
    
    //now lets see what we got forwards
    temp = head.next;
    while(temp!=&head){
        printf("forward list item: current is %p; next is %p;prev is %p; data is %d\n",temp,temp->next,temp->prev,temp->data);
        temp = temp->next;     //move the next item in the list
    }
    // and going backwards
    temp = head.prev;        //initialize our temporary variable to the tail of the list
    while(temp!=&head)       //keep going until we reach the end
    {
       printf("backward list item: current is %p; next is %p;prev is %p; data is %d\n",temp,temp->next,temp->prev,temp->data);
        temp = temp->prev;   //move to the previous item in the list
    }
        

    return 0;
}
